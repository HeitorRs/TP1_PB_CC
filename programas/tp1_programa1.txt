import time
import matplotlib.pyplot as plt
import random

#Implementação Bubble Sort
def bubble_sort(dados):
    n = len(dados)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if dados[j] > dados[j + 1]:
                dados[j], dados[j + 1] = dados[j + 1], dados[j]
    return dados


#Implementação Selection Sort
def selection_sort(dados):
    n = len(dados)
    for i in range(n - 1):
        indice_minimo = i
        for j in range(i + 1, n):
            if dados[j] < dados[indice_minimo]:
                indice_minimo = j
        if indice_minimo != i:
            dados[i], dados[indice_minimo] = dados[indice_minimo], dados[i]
    return dados


#Implementação Insertion Sort
def insertion_sort(dados):
    for i in range(1, len(dados)):
        chave = dados[i]
        j = i - 1
        while j >= 0 and chave < dados[j]:
            dados[j + 1] = dados[j]
            j -= 1
        dados[j + 1] = chave
    return dados


#Função para medir o tempo de execução
def medir_tempo(funcao_ordenacao, dados):
    inicio = time.time()
    funcao_ordenacao(dados[:]) 
    return time.time() - inicio

#Função para ler o arquivo
def ler_arquivo(arquivo):
    try:
        with open(arquivo, "r") as arquivo:
            dados = arquivo.read().splitlines()
    except FileNotFoundError:
        print("Erro: O arquivo 'listagem.txt' não foi encontrado.")
        return
    
    random.shuffle(dados)

    return dados

    
def principal():
    dados = ler_arquivo("listagem.txt")

    tamanhos = list(range(1250, 10001, 1250))
    algoritmos = {
        "Bubble Sort": bubble_sort,
        "Selection Sort": selection_sort,
        "Insertion Sort": insertion_sort,
    }

    resultados = {nome: [] for nome in algoritmos}

    for tamanho in tamanhos:
        subconjunto = dados[:tamanho]
        print(f"Ordenando {tamanho} itens...")

        for nome, funcao in algoritmos.items():
            tempos = []
            for _ in range(5):
                tempos.append(medir_tempo(funcao, subconjunto))
            tempo_medio = sum(tempos) / len(tempos)
            resultados[nome].append(tempo_medio)

    for nome, tempos in resultados.items():
       print(f"Algoritmos {nome}:{tempos}")


    #Plotando o gráfico
    for nome, tempos in resultados.items():
        plt.plot(tamanhos, tempos, label=nome)

    plt.xlabel("Número de itens")
    plt.ylabel("Tempo médio (segundos)")
    plt.title("Comparação de Algoritmos de Ordenação")
    plt.legend()
    plt.grid(True)
    plt.show()

if __name__ == "__main__":
    principal()
